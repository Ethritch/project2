// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using project2.Models;

namespace project2.Migrations
{
    [DbContext(typeof(AppointmentContext))]
    [Migration("20220323164257_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("project2.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GroupSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AppointmentID");

                    b.HasIndex("TimeId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("project2.Models.Time", b =>
                {
                    b.Property<int>("TimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("taken")
                        .HasColumnType("INTEGER");

                    b.HasKey("TimeId");

                    b.ToTable("Time");

                    b.HasData(
                        new
                        {
                            TimeId = 1,
                            AppointmentTime = new DateTime(2022, 4, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            taken = false
                        },
                        new
                        {
                            TimeId = 2,
                            AppointmentTime = new DateTime(2022, 4, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            taken = false
                        },
                        new
                        {
                            TimeId = 3,
                            AppointmentTime = new DateTime(2022, 4, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            taken = false
                        },
                        new
                        {
                            TimeId = 4,
                            AppointmentTime = new DateTime(2022, 4, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            taken = false
                        },
                        new
                        {
                            TimeId = 5,
                            AppointmentTime = new DateTime(2022, 4, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            taken = false
                        },
                        new
                        {
                            TimeId = 6,
                            AppointmentTime = new DateTime(2022, 4, 1, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            taken = false
                        },
                        new
                        {
                            TimeId = 7,
                            AppointmentTime = new DateTime(2022, 4, 1, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            taken = false
                        },
                        new
                        {
                            TimeId = 8,
                            AppointmentTime = new DateTime(2022, 4, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            taken = false
                        },
                        new
                        {
                            TimeId = 9,
                            AppointmentTime = new DateTime(2022, 4, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            taken = false
                        },
                        new
                        {
                            TimeId = 10,
                            AppointmentTime = new DateTime(2022, 4, 1, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            taken = false
                        },
                        new
                        {
                            TimeId = 11,
                            AppointmentTime = new DateTime(2022, 4, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            taken = false
                        },
                        new
                        {
                            TimeId = 12,
                            AppointmentTime = new DateTime(2022, 4, 1, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            taken = false
                        },
                        new
                        {
                            TimeId = 13,
                            AppointmentTime = new DateTime(2022, 4, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            taken = false
                        });
                });

            modelBuilder.Entity("project2.Models.Appointment", b =>
                {
                    b.HasOne("project2.Models.Time", "Time")
                        .WithMany()
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
